[app]
video_source = "pexels" # "pexels" or "pixabay"

# 是否隱藏設定面板
hide_config = false

# Pexels API Key，用於擷取無版權素材
# 註冊地址: https://www.pexels.com/api/
# 申請API Key: https://www.pexels.com/api/new/
# 特別注意格式，Key 用英文雙引號括起來，多個Key用逗號隔開
pexels_api_keys = ["YOUR_API_KEY"]

# Pixabay API Key，用於擷取無版權素材
# 註冊地址: https://pixabay.com/
# 申請API Key: https://pixabay.com/api/docs/
# 特別注意格式，Key 用英文雙引號括起來，多個Key用逗號隔開
pixabay_api_keys = ["YOUR_API_KEY"]

# 支援的提供商 (Supported providers):
#   openai      (OpenAI)
#   moonshot    (月之暗面)
#   azure       (Azure OpenAI)
#   qwen        (通義千問)
#   deepseek    (DeepSeek)
#   gemini      (Google Gemini)
#   g4f         (GPT4Free)
#   oneapi      (OneAPI)
#   ollama      (Ollama)
#   cloudflare  (Cloudflare)
#   ernie       (文心一言)
#   pollinations (Pollinations)
llm_provider = "openai"

########## Pollinations AI Settings
# Visit https://pollinations.ai/ to learn more
# API Key is optional - leave empty for public access
pollinations_api_key = ""
# Default base URL for Pollinations API
pollinations_base_url = "https://pollinations.ai/api/v1"
# Default model for text generation
pollinations_model_name = "openai-fast"

########## Ollama Settings
# No need to set it unless you want to use your own proxy
ollama_base_url = ""
# Check your available models at https://ollama.com/library
ollama_model_name = ""

########## OpenAI API Key
# Get your API key at https://platform.openai.com/api-keys
openai_api_key = ""
# No need to set it unless you want to use your own proxy
openai_base_url = ""
# Check your available models at https://platform.openai.com/account/limits
openai_model_name = "gpt-4.1-mini"

########## Moonshot API Key
# Visit https://platform.moonshot.cn/console/api-keys to get your API key.
moonshot_api_key = ""
moonshot_base_url = "https://api.moonshot.cn/v1"
moonshot_model_name = "moonshot-v1-8k"

########## OneAPI API Key
# Visit https://github.com/songquanpeng/one-api to get your API key
oneapi_api_key = ""
oneapi_base_url = ""
oneapi_model_name = ""

########## G4F
# Visit https://github.com/xtekky/gpt4free to get more details
# Supported model list: https://github.com/xtekky/gpt4free/blob/main/g4f/models.py
g4f_model_name = "gpt-4.1-mini"

########## Azure API Key
# Visit https://learn.microsoft.com/zh-cn/azure/ai-services/openai/ to get more details
# API documentation: https://learn.microsoft.com/zh-cn/azure/ai-services/openai/reference
azure_api_key = ""
azure_base_url = ""
azure_model_name = "gpt-35-turbo"        # replace with your model deployment name
azure_api_version = "2024-02-15-preview"

########## Gemini API Key
gemini_api_key = ""
gemini_model_name = "gemini-2.0-flash"

########## Qwen API Key
# Visit https://dashscope.console.aliyun.com/apiKey to get your API key
# Visit below links to get more details
# https://tongyi.aliyun.com/qianwen/
# https://help.aliyun.com/zh/dashscope/developer-reference/model-introduction
qwen_api_key = ""
qwen_model_name = "qwen-max"


########## DeepSeek API Key
# Visit https://platform.deepseek.com/api_keys to get your API key
deepseek_api_key = ""
deepseek_base_url = "https://api.deepseek.com"
deepseek_model_name = "deepseek-chat"

# Subtitle Provider, "edge" or "whisper"
# If empty, the subtitle will not be generated
subtitle_provider = "edge"

#
# ImageMagick
#
# Once you have installed it, ImageMagick will be automatically detected, except on Windows!
# On Windows, for example "C:\Program Files (x86)\ImageMagick-7.1.1-Q16-HDRI\magick.exe"
# Download from https://imagemagick.org/archive/binaries/ImageMagick-7.1.1-29-Q16-x64-static.exe

# imagemagick_path = "C:\\Program Files (x86)\\ImageMagick-7.1.1-Q16\\magick.exe"


#
# FFMPEG
#
# 通常情況下，ffmpeg 會被自動下載，並且會被自動檢測到。
# 但是如果你的環境有問題，無法自動下載，可能會遇到如下錯誤：
# RuntimeError: No ffmpeg exe could be found.
# Install ffmpeg on your system, or set the IMAGEIO_FFMPEG_EXE environment variable.
# 此時你可以手動下載 ffmpeg 並設定 ffmpeg_path，下載地址：https://www.gyan.dev/ffmpeg/builds/
# 請根據你的實際路徑設定，注意 Windows 路徑分隔符為 \\
# ffmpeg_path = "C:\\Users\\harry\\Downloads\\ffmpeg.exe"
#########################################################################################

# 當影片產生成功後，API服務提供的影片下載接入點，預設為目前服務的地址和監聽埠
# 比如 http://127.0.0.1:8080/tasks/6357f542-a4e1-46a1-b4c9-bf3bd0df5285/final-1.mp4
# 如果你需要使用域名對外提供服務（一般會用nginx做代理），則可以設定為你的域名
# 比如 https://xxxx.com/tasks/6357f542-a4e1-46a1-b4c9-bf3bd0df5285/final-1.mp4
# download_host = "http://127.0.0.1:8080"

# When the video is successfully generated, the API service provides a download endpoint for the video, defaulting to the service's current address and listening port.
# For example, http://127.0.0.1:8080/tasks/6357f542-a4e1-46a1-b4c9-bf3bd0df5285/final-1.mp4
# If you need to provide the service externally using a domain name (usually done with nginx as a proxy), you can set it to your domain name.
# For example, https://xxxx.com/tasks/6357f542-a4e1-46a1-b4c9-bf3bd0df5285/final-1.mp4
# endpoint="https://xxxx.com"
endpoint = ""


# Video material storage location
# material_directory = ""                    # Indicates that video materials will be downloaded to the default folder, the default folder is ./storage/cache_videos under the current project
# material_directory = "/user/harry/videos"  # Indicates that video materials will be downloaded to a specified folder
# material_directory = "task"                # Indicates that video materials will be downloaded to the current task's folder, this method does not allow sharing of already downloaded video materials

# 素材庫配置
provider = "pexels"
# 影片素材存放位置
# material_directory = ""                    #表示將影片素材下載到預設的資料夾，預設資料夾為目前專案下的 ./storage/cache_videos
# material_directory = "/user/harry/videos"  #表示將影片素材下載到指定的資料夾中
# material_directory = "task"                #表示將影片素材下載到目前任務的資料夾中，這種方式無法共享已經下載的影片素材
material_directory = ""

# 下載時所使用的執行緒數，預設為4。數字越大，下載速度越快，但會增加系統負擔
n_threads = 4

# 免費Pixabay帳戶的請求限制配置
# 每小時最大請求數（免費帳戶限制）
max_requests_per_hour = 100

# 每分鐘最大請求數（免費帳戶限制）
max_requests_per_minute = 5

# Used for state management of the task
enable_redis = false
redis_host = "localhost"
redis_port = 6379
redis_db = 0
redis_password = ""

# 文生影片時的最大並行任務數
max_videos_per_batch = 1

[whisper]
# Only effective when subtitle_provider is "whisper"

# Run on GPU with FP16
# model = WhisperModel(model_size, device="cuda", compute_type="float16")

# Run on GPU with INT8
# model = WhisperModel(model_size, device="cuda", compute_type="int8_float16")

# Run on CPU with INT8
# model = WhisperModel(model_size, device="cpu", compute_type="int8")

# recommended model_size: "large-v3"
model_size = "large-v3"
# if you want to use GPU, set device="cuda"
device = "CPU"
compute_type = "int8"


[proxy]
### Use a proxy to access the Pexels API
### Format: "http://<username>:<password>@<proxy>:<port>"
### Example: "http://user:pass@proxy:1234"
### Doc: https://requests.readthedocs.io/en/latest/user/advanced/#proxies

# http = "http://10.10.1.10:3128"
# https = "http://10.10.1.10:1080"

[azure]
# Azure Speech API Key
# Get your API key at https://portal.azure.com/#view/Microsoft_Azure_ProjectOxford/CognitiveServicesHub/~/SpeechServices
speech_key = ""
speech_region = ""

[siliconflow]
# SiliconFlow API Key
# Get your API key at https://siliconflow.cn
api_key = ""

[ui]
# UI related settings
# 是否隱藏日誌訊息
hide_log = false
